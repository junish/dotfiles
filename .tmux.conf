# Use c-t instead of c-b as the prefix
unbind C-b
set -g prefix C-t
bind C-t send-prefix
set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION GPG_AGENT_INFO"

# encoding
#set-option utf8-default on
#set-window-option -g utf8 on

# vi-style controls for copy mode
setw -g mode-keys vi

# start window number 1
#set-option -g base-index 1

# Use mouse mode
set-option -g mouse-select-pane
unbind m; bind m set-option -g mouse-select-pane

# use clip borad at MacOSX
# http://d.hatena.ne.jp/koseki2/20110816/TmuxCopy
# * reattach-to-user-namespace
#     https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard.git
set-option -g default-command "reattach-to-user-namespace -l bash"
unbind ^Q; bind ^Q run-shell 'reattach-to-user-namespace tmux-pbcopy'

# title A
unbind A; bind A command-prompt "rename-window %%"

# next window, previous window
unbind ^T; bind ^T next-window
unbind t; bind t previous-window

# open a man page in new window
unbind /; bind / command-prompt "split-window 'exec man %%'"

# displays * 
unbind *; bind * list-clients

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
unbind ^S; bind -r ^S split-window -v
unbind ^V; bind -r ^V split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
unbind ^H; bind -r ^H select-pane -L
unbind ^J; bind -r ^J select-pane -D
unbind ^K; bind -r ^K select-pane -U
unbind ^L; bind -r ^L select-pane -R
unbind ^O; bind -r ^O break-pane
unbind ^X; bind -r ^X kill-pane
unbind ^C; bind -r ^C kill-pane
#unbind Space; bind Space next-pane

unbind x; bind x kill-pane

# ペインを新しい Window に移動
unbind j; bind j join-pane -t:-.bottom-right
unbind b; bind o break-pane

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
unbind <; bind -r < resize-pane -L 1
unbind >; bind -r > resize-pane -R 1
unbind -; bind -r - resize-pane -D 1
unbind +; bind -r + resize-pane -U 1

unbind b; bind b break-pane
unbind j; bind j join-pane -t:-.bottom-right

# layout
unbind Enter; bind Enter next-layout

# ---------------- statusbar ----------------
set -g display-time 2000

# toggle statusbar
bind-key b set-option status

# default statusbar colors
set -g status-fg black
set -g status-bg green
set -g status-attr default

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default

# active window title colors
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# center align the window list
#set -g status-justify centre

# show some useful stats but only when tmux is started
# outside of Xorg, otherwise dwm statusbar shows these already
#set -g status-right ""
#set -g status-left ""
#if '[ -z "$DISPLAY" ]' 'set -g status-left "[#[fg=green] #H #[default]]"'
#if '[ -z "$DISPLAY" ]' 'set -g status-right "[ #[fg=magenta]#(cat /proc/loadavg | cut -d \" \" -f 1,2,3)#[default] ][ #[fg=cyan,bright]%a %Y-%m-%d %H:%M #[default]]"'
#if '[ -z "$DISPLAY" ]' 'set -g status-right-length 50'

# ---------------- session ----------------
# Keys to switch session.
#unbind ^R; bind -r ^R switch-client -t 0
#unbind ^E; bind -r ^E switch-client -t 1
##unbind ^W; bind -r ^W switch-client -t 2
#
## First session
#new -d -s 0 -n main
#select-window -t 0
##run-shell 'test -x ~/bin/tmux-start-0 && exec sh ~/bin/tmux-start-0'
#
### Second session
#new -d -s 1
#set -t 1 status-bg yellow
#linkw -dk -t 0 -s 0:0
##run-shell 'test -x ~/bin/tmux-start-1 && exec sh ~/bin/tmux-start-1'
#
### Defautl session
#switch-client -t 0 #TODO
