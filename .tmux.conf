# Use c-t instead of c-b as the prefix
unbind C-b
set -g prefix C-t
bind C-t send-prefix
set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION GPG_AGENT_INFO"

# open a man page in new window
display-message "Reload Config!!"
bind . source ~/.tmux.conf

# vi-style controls for copy mode
setw -g mode-keys vi

# start window number 1
set -g base-index 1

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux.#I.#W"

# scrollback buffer n lines
set -g history-limit 5000

# mouse
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

#status-left 及び status-right の非ASCII文字をUTF-8として扱う
set-option -g status-utf8 on 

set -g display-time 2000

# ---------------- keybind ----------------
# toggle mouse
#bind m set-option -g mouse-select-pane

# copy
bind-key ^Y copy-mode

# one line copy when copy-mode
#http://blog.m4i.jp/entry/2012/02/13/155233
bind-key -t vi-copy Y copy-line

# paste
bind-key ^P paste-buffer

# open a man page in new window
bind / command-prompt "split-window -v 'exec man %%'";

# quick view of processes
bind '~' split-window "exec htop"

# use clip borad at MacOSX
# http://d.hatena.ne.jp/koseki2/20110816/TmuxCopy
# * reattach-to-user-namespace
#     https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard.git
#set-option -g default-command "reattach-to-user-namespace -l bash"
#bind ^Q run-shell 'reattach-to-user-namespace tmux-pbcopy'

# title A
bind A command-prompt "rename-window %%"

# open a man page in new window
bind / command-prompt "split-window 'exec man %%'"

# displays * 
bind * list-clients

# next window, previous window
bind ^T next-window
bind ^R previous-window
bind -n S-Right next-window
bind -n S-Left previous-window

# toggle last window like screen
bind -r ^A last-window

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind -r ^S split-window -v
bind -r ^V split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind -r ^H select-pane -L
bind -r ^J select-pane -D
bind -r ^K select-pane -U
bind -r ^L select-pane -R
bind -r ^O break-pane
bind -r ^X kill-pane
bind -r ^C kill-pane
#bind Space next-pane
bind x kill-pane

#C-Right,C-LeftでPain切り替え
#* Ctrl and arrow keys doesn't work in putty! What do I do?
#://tmux.svn.sourceforge.net/viewvc/tmux/trunk/FAQ
bind -r C-Left select-pane -L
bind -r C-Down select-pane -D
bind -r C-Up select-pane -U
bind -r C-Right select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1

# ペインを新しい Window に移動
bind b break-pane
bind j join-pane -t:-.bottom-right

# change layout
bind Enter next-layout
bind t select-layout tiled

# toggle statusbar
bind-key b set-option status

# ---------------- statusbar ----------------
## ステータス行の書式
  #(コマンド行)     コマンド出力の最初の行
  #[属性]           色/属性の変更(例:#[fg=cyan,bright])
  #H                ホスト名
  #I                ウィンドウ番号
  #P                ペイン番号
  #S                セッション名
  #T                ウィンドウタイトル
  #W                ウィンドウ名
  ##                「#」の文字
# コマンドは繰り返し実行される (更新頻度はstatus-intervalによる・既定値は15秒)
# 指定可能な色は
# black red green yellow blue magenta cyan white
# の他、256色パレット上のcolour0,colour1, ... colour255が利用可能
# 指定可能な属性は
#   bright(bold)[明るい(太字)], dim[暗い], underscore[下線], blink[点滅],
#   reverse[反転], hidden[非表示], italics[イタリック], default[書式のクリア]
#   (端末によっては効果がないものもある)

## ステータス行更新間隔(1で毎秒更新・既定値15)
set-option -g status-interval 5

# default statusbar colors
set -g status-fg black
set -g status-bg green
set -g status-attr default

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default

# active window title colors
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

#status-right strings
set-option -g status-right "[#T][CPU:#(uptime | awk '{print $10}') MEM:#(memusage)][%Y/%m/%d(%a)%H:%M]"
set-option -g status-right-length 100

# center align the window list
#set -g status-justify centre

# ---------------- session ----------------
# Keys to switch session.
bind -r ^E switch-client -t 1
bind -r ^W switch-client -t 2
bind -r ^Q switch-client -t 3
